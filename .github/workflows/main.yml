name: CI

on: push

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r build_requirements.txt
      # Run our unit tests
      - name: Run unit tests
        run: |
          python -m pytest

  deploy-to-pypi:
  # Only run this job if "build" has ended successfully
    needs:
      - build-and-test
    if: github.ref == 'refs/heads/master'  
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('build_requirements.txt') }}
      
      - name: install dependencies
        run: |
          pip install -r build_requirements.txt

      - name: build_package
        run: |
          python3 setup.py sdist bdist_wheel

      - name: upload
        env:
          PYPI_LOGIN_TOKEN: ${{ secrets.PYPI_LOGIN_TOKEN }}
        run: |
          echo "[pypi]" > ~/.pypirc
          chmod 700 ~/.pypirc
          echo "username = __token__" >> ~/.pypirc
          echo "password = $PYPI_LOGIN_TOKEN" >> ~/.pypirc
          ls -lrt dist/
          pwd
          ls ~/.pypirc
          python3 -m twine upload --verbose --skip-existing dist/*
